
name: Continuous integration
on:
  - push
  - pull_request

jobs:
  static-checks:
    name: Static checks
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Set up Python (for pre-commit)
        uses: actions/setup-python@v2.3.1
        with:
          python-version: '3.9.1'

      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qqq clang-format
          python -m pip install --upgrade pre-commit

      - name: Run pre-commit hooks
        run: |
          pre-commit run --all-files

  linux-gcc-old:
    name: Build (Ubuntu 18.04 x86_64, GCC) (-Dwerror=false)
    # Test on a slightly old Linux distribution to ensure greater compatibility.
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Set up Python (for Meson)
        uses: actions/setup-python@v2.3.1
        with:
          python-version: '3.9.1'

      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qqq build-essential ninja-build
          python -m pip install --upgrade meson

      - name: Build the library
        run: |
          meson builddir -Dwerror=false
          meson compile -C builddir
          ls -l builddir

  linux-gcc:
    name: Build (Fedora 33 x86_64, GCC)
    runs-on: ubuntu-20.04
    container:
      image: fedora:33
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Install dependencies
        run: |
          dnf install -y gcc meson

      - name: Build the library
        run: |
          meson builddir -Dwerror=true
          meson compile -C builddir
          ls -l builddir

  linux-clang:
    name: Build (Fedora 33 x86_64, Clang) (libfuzzer)
    runs-on: ubuntu-20.04
    container:
      image: fedora:33
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Install dependencies
        run: |
          dnf install -y clang meson

      - name: Build the library
        run: |
          CC=clang meson builddir -Dwerror=true -Duse_clang_fuzzer=true
          meson compile -C builddir
          ls -l builddir

      - name: Run fuzzer
        run: |
          meson test -C builddir --print-errorlogs

  macos-clang:
    name: Build (macOS x86_64, Clang)
    runs-on: macos-10.15
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Set up Python (for Meson)
        uses: actions/setup-python@v2.3.1
        with:
          python-version: '3.9.1'

      - name: Install dependencies
        run: |
          brew install ninja
          python -m pip install --upgrade meson

      - name: Build the library
        run: |
          meson builddir -Dwerror=true
          meson compile -C builddir
          ls -l builddir

  windows-mingw:
    name: Build (Windows x86_64, MinGW) (-Dwerror=false)
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Set up Python (for Meson)
        uses: actions/setup-python@v2.3.1
        with:
          python-version: '3.9.1'

      - name: Install dependencies
        run: |
          choco install ninja
          python -m pip install --upgrade meson

      - name: Build the library
        run: |
          meson builddir -Dwerror=false
          meson compile -C builddir
          ls builddir

  windows-msvc:
    name: Build (Windows x86_64, MSVC)
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Set up Python (for Meson)
        uses: actions/setup-python@v2.3.1
        with:
          python-version: '3.9.1'

      - name: Install dependencies
        run: |
          choco install ninja
          python -m pip install --upgrade meson

      - name: Set up Visual Studio command prompt
        uses: ilammy/msvc-dev-cmd@v1.8.0

      - name: Build the library
        run: |
          meson builddir -Dwerror=true
          meson compile -C builddir
          ls builddir
